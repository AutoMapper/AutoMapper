namespace AutoMapper.Mappers
{
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;

    public class ConvertMapper : IObjectMapper
    {
        private readonly IReadOnlyDictionary<TypePair, Func<object, object>> _converters = new ReadOnlyDictionary<TypePair, Func<object, object>>(new Dictionary<TypePair, Func<object, object>>
        {
            // bool
            { new TypePair(typeof(bool),     typeof(bool)), foo => Convert.ToBoolean((byte)foo) },
            { new TypePair(typeof(byte),     typeof(bool)), foo => Convert.ToBoolean((bool)foo) },
            { new TypePair(typeof(char),     typeof(bool)), foo => Convert.ToBoolean((char)foo) },
            { new TypePair(typeof(DateTime), typeof(bool)), foo => Convert.ToBoolean((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(bool)), foo => Convert.ToBoolean((decimal)foo) },
            { new TypePair(typeof(double),   typeof(bool)), foo => Convert.ToBoolean((double)foo) },
            { new TypePair(typeof(short),    typeof(bool)), foo => Convert.ToBoolean((short)foo) },
            { new TypePair(typeof(int),      typeof(bool)), foo => Convert.ToBoolean((int)foo) },
            { new TypePair(typeof(long),     typeof(bool)), foo => Convert.ToBoolean((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(bool)), foo => Convert.ToBoolean((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(bool)), foo => Convert.ToBoolean((float)foo) },
            { new TypePair(typeof(string),   typeof(bool)), foo => Convert.ToBoolean((string)foo) },
            { new TypePair(typeof(ushort),   typeof(bool)), foo => Convert.ToBoolean((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(bool)), foo => Convert.ToBoolean((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(bool)), foo => Convert.ToBoolean((ulong)foo) },
            // byte
            { new TypePair(typeof(bool),     typeof(byte)), foo => Convert.ToByte((byte)foo) },
            { new TypePair(typeof(byte),     typeof(byte)), foo => Convert.ToByte((bool)foo) },
            { new TypePair(typeof(char),     typeof(byte)), foo => Convert.ToByte((char)foo) },
            { new TypePair(typeof(DateTime), typeof(byte)), foo => Convert.ToByte((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(byte)), foo => Convert.ToByte((decimal)foo) },
            { new TypePair(typeof(double),   typeof(byte)), foo => Convert.ToByte((double)foo) },
            { new TypePair(typeof(short),    typeof(byte)), foo => Convert.ToByte((short)foo) },
            { new TypePair(typeof(int),      typeof(byte)), foo => Convert.ToByte((int)foo) },
            { new TypePair(typeof(long),     typeof(byte)), foo => Convert.ToByte((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(byte)), foo => Convert.ToByte((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(byte)), foo => Convert.ToByte((float)foo) },
            { new TypePair(typeof(string),   typeof(byte)), foo => Convert.ToByte((string)foo) },
            { new TypePair(typeof(ushort),   typeof(byte)), foo => Convert.ToByte((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(byte)), foo => Convert.ToByte((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(byte)), foo => Convert.ToByte((ulong)foo) },
            // char
            { new TypePair(typeof(bool),     typeof(char)), foo => Convert.ToChar((byte)foo) },
            { new TypePair(typeof(byte),     typeof(char)), foo => Convert.ToChar((bool)foo) },
            { new TypePair(typeof(char),     typeof(char)), foo => Convert.ToChar((char)foo) },
            { new TypePair(typeof(DateTime), typeof(char)), foo => Convert.ToChar((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(char)), foo => Convert.ToChar((decimal)foo) },
            { new TypePair(typeof(double),   typeof(char)), foo => Convert.ToChar((double)foo) },
            { new TypePair(typeof(short),    typeof(char)), foo => Convert.ToChar((short)foo) },
            { new TypePair(typeof(int),      typeof(char)), foo => Convert.ToChar((int)foo) },
            { new TypePair(typeof(long),     typeof(char)), foo => Convert.ToChar((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(char)), foo => Convert.ToChar((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(char)), foo => Convert.ToChar((float)foo) },
            { new TypePair(typeof(string),   typeof(char)), foo => Convert.ToChar((string)foo) },
            { new TypePair(typeof(ushort),   typeof(char)), foo => Convert.ToChar((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(char)), foo => Convert.ToChar((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(char)), foo => Convert.ToChar((ulong)foo) },
            // DateTime
            { new TypePair(typeof(bool),     typeof(DateTime)), foo => Convert.ToDateTime((byte)foo) },
            { new TypePair(typeof(byte),     typeof(DateTime)), foo => Convert.ToDateTime((bool)foo) },
            { new TypePair(typeof(char),     typeof(DateTime)), foo => Convert.ToDateTime((char)foo) },
            { new TypePair(typeof(DateTime), typeof(DateTime)), foo => Convert.ToDateTime((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(DateTime)), foo => Convert.ToDateTime((decimal)foo) },
            { new TypePair(typeof(double),   typeof(DateTime)), foo => Convert.ToDateTime((double)foo) },
            { new TypePair(typeof(short),    typeof(DateTime)), foo => Convert.ToDateTime((short)foo) },
            { new TypePair(typeof(int),      typeof(DateTime)), foo => Convert.ToDateTime((int)foo) },
            { new TypePair(typeof(long),     typeof(DateTime)), foo => Convert.ToDateTime((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(DateTime)), foo => Convert.ToDateTime((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(DateTime)), foo => Convert.ToDateTime((float)foo) },
            { new TypePair(typeof(string),   typeof(DateTime)), foo => Convert.ToDateTime((string)foo) },
            { new TypePair(typeof(ushort),   typeof(DateTime)), foo => Convert.ToDateTime((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(DateTime)), foo => Convert.ToDateTime((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(DateTime)), foo => Convert.ToDateTime((ulong)foo) },
            // DateTime
            { new TypePair(typeof(bool),     typeof(decimal)), foo => Convert.ToDecimal((byte)foo) },
            { new TypePair(typeof(byte),     typeof(decimal)), foo => Convert.ToDecimal((bool)foo) },
            { new TypePair(typeof(char),     typeof(decimal)), foo => Convert.ToDecimal((char)foo) },
            { new TypePair(typeof(DateTime), typeof(decimal)), foo => Convert.ToDecimal((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(decimal)), foo => Convert.ToDecimal((decimal)foo) },
            { new TypePair(typeof(double),   typeof(decimal)), foo => Convert.ToDecimal((double)foo) },
            { new TypePair(typeof(short),    typeof(decimal)), foo => Convert.ToDecimal((short)foo) },
            { new TypePair(typeof(int),      typeof(decimal)), foo => Convert.ToDecimal((int)foo) },
            { new TypePair(typeof(long),     typeof(decimal)), foo => Convert.ToDecimal((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(decimal)), foo => Convert.ToDecimal((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(decimal)), foo => Convert.ToDecimal((float)foo) },
            { new TypePair(typeof(string),   typeof(decimal)), foo => Convert.ToDecimal((string)foo) },
            { new TypePair(typeof(ushort),   typeof(decimal)), foo => Convert.ToDecimal((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(decimal)), foo => Convert.ToDecimal((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(decimal)), foo => Convert.ToDecimal((ulong)foo) },
            // Double
            { new TypePair(typeof(bool),     typeof(double)), foo => Convert.ToDouble((byte)foo) },
            { new TypePair(typeof(byte),     typeof(double)), foo => Convert.ToDouble((bool)foo) },
            { new TypePair(typeof(char),     typeof(double)), foo => Convert.ToDouble((char)foo) },
            { new TypePair(typeof(DateTime), typeof(double)), foo => Convert.ToDouble((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(double)), foo => Convert.ToDouble((decimal)foo) },
            { new TypePair(typeof(double),   typeof(double)), foo => Convert.ToDouble((double)foo) },
            { new TypePair(typeof(short),    typeof(double)), foo => Convert.ToDouble((short)foo) },
            { new TypePair(typeof(int),      typeof(double)), foo => Convert.ToDouble((int)foo) },
            { new TypePair(typeof(long),     typeof(double)), foo => Convert.ToDouble((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(double)), foo => Convert.ToDouble((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(double)), foo => Convert.ToDouble((float)foo) },
            { new TypePair(typeof(string),   typeof(double)), foo => Convert.ToDouble((string)foo) },
            { new TypePair(typeof(ushort),   typeof(double)), foo => Convert.ToDouble((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(double)), foo => Convert.ToDouble((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(double)), foo => Convert.ToDouble((ulong)foo) },
            // Int16
            { new TypePair(typeof(bool),     typeof(short)), foo => Convert.ToInt16((byte)foo) },
            { new TypePair(typeof(byte),     typeof(short)), foo => Convert.ToInt16((bool)foo) },
            { new TypePair(typeof(char),     typeof(short)), foo => Convert.ToInt16((char)foo) },
            { new TypePair(typeof(DateTime), typeof(short)), foo => Convert.ToInt16((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(short)), foo => Convert.ToInt16((decimal)foo) },
            { new TypePair(typeof(double),   typeof(short)), foo => Convert.ToInt16((double)foo) },
            { new TypePair(typeof(short),    typeof(short)), foo => Convert.ToInt16((short)foo) },
            { new TypePair(typeof(int),      typeof(short)), foo => Convert.ToInt16((int)foo) },
            { new TypePair(typeof(long),     typeof(short)), foo => Convert.ToInt16((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(short)), foo => Convert.ToInt16((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(short)), foo => Convert.ToInt16((float)foo) },
            { new TypePair(typeof(string),   typeof(short)), foo => Convert.ToInt16((string)foo) },
            { new TypePair(typeof(ushort),   typeof(short)), foo => Convert.ToInt16((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(short)), foo => Convert.ToInt16((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(short)), foo => Convert.ToInt16((ulong)foo) },
            // Int32
            { new TypePair(typeof(bool),     typeof(int)), foo => Convert.ToInt32((byte)foo) },
            { new TypePair(typeof(byte),     typeof(int)), foo => Convert.ToInt32((bool)foo) },
            { new TypePair(typeof(char),     typeof(int)), foo => Convert.ToInt32((char)foo) },
            { new TypePair(typeof(DateTime), typeof(int)), foo => Convert.ToInt32((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(int)), foo => Convert.ToInt32((decimal)foo) },
            { new TypePair(typeof(double),   typeof(int)), foo => Convert.ToInt32((double)foo) },
            { new TypePair(typeof(short),    typeof(int)), foo => Convert.ToInt32((short)foo) },
            { new TypePair(typeof(int),      typeof(int)), foo => Convert.ToInt32((int)foo) },
            { new TypePair(typeof(long),     typeof(int)), foo => Convert.ToInt32((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(int)), foo => Convert.ToInt32((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(int)), foo => Convert.ToInt32((float)foo) },
            { new TypePair(typeof(string),   typeof(int)), foo => Convert.ToInt32((string)foo) },
            { new TypePair(typeof(ushort),   typeof(int)), foo => Convert.ToInt32((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(int)), foo => Convert.ToInt32((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(int)), foo => Convert.ToInt32((ulong)foo) },
            // Int64
            { new TypePair(typeof(bool),     typeof(long)), foo => Convert.ToInt64((byte)foo) },
            { new TypePair(typeof(byte),     typeof(long)), foo => Convert.ToInt64((bool)foo) },
            { new TypePair(typeof(char),     typeof(long)), foo => Convert.ToInt64((char)foo) },
            { new TypePair(typeof(DateTime), typeof(long)), foo => Convert.ToInt64((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(long)), foo => Convert.ToInt64((decimal)foo) },
            { new TypePair(typeof(double),   typeof(long)), foo => Convert.ToInt64((double)foo) },
            { new TypePair(typeof(short),    typeof(long)), foo => Convert.ToInt64((short)foo) },
            { new TypePair(typeof(int),      typeof(long)), foo => Convert.ToInt64((int)foo) },
            { new TypePair(typeof(long),     typeof(long)), foo => Convert.ToInt64((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(long)), foo => Convert.ToInt64((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(long)), foo => Convert.ToInt64((float)foo) },
            { new TypePair(typeof(string),   typeof(long)), foo => Convert.ToInt64((string)foo) },
            { new TypePair(typeof(ushort),   typeof(long)), foo => Convert.ToInt64((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(long)), foo => Convert.ToInt64((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(long)), foo => Convert.ToInt64((ulong)foo) },
            // sbyte
            { new TypePair(typeof(bool),     typeof(sbyte)), foo => Convert.ToSByte((byte)foo) },
            { new TypePair(typeof(byte),     typeof(sbyte)), foo => Convert.ToSByte((bool)foo) },
            { new TypePair(typeof(char),     typeof(sbyte)), foo => Convert.ToSByte((char)foo) },
            { new TypePair(typeof(DateTime), typeof(sbyte)), foo => Convert.ToSByte((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(sbyte)), foo => Convert.ToSByte((decimal)foo) },
            { new TypePair(typeof(double),   typeof(sbyte)), foo => Convert.ToSByte((double)foo) },
            { new TypePair(typeof(short),    typeof(sbyte)), foo => Convert.ToSByte((short)foo) },
            { new TypePair(typeof(int),      typeof(sbyte)), foo => Convert.ToSByte((int)foo) },
            { new TypePair(typeof(long),     typeof(sbyte)), foo => Convert.ToSByte((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(sbyte)), foo => Convert.ToSByte((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(sbyte)), foo => Convert.ToSByte((float)foo) },
            { new TypePair(typeof(string),   typeof(sbyte)), foo => Convert.ToSByte((string)foo) },
            { new TypePair(typeof(ushort),   typeof(sbyte)), foo => Convert.ToSByte((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(sbyte)), foo => Convert.ToSByte((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(sbyte)), foo => Convert.ToSByte((ulong)foo) },
            // float
            { new TypePair(typeof(bool),     typeof(float)), foo => Convert.ToSingle((byte)foo) },
            { new TypePair(typeof(byte),     typeof(float)), foo => Convert.ToSingle((bool)foo) },
            { new TypePair(typeof(char),     typeof(float)), foo => Convert.ToSingle((char)foo) },
            { new TypePair(typeof(DateTime), typeof(float)), foo => Convert.ToSingle((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(float)), foo => Convert.ToSingle((decimal)foo) },
            { new TypePair(typeof(double),   typeof(float)), foo => Convert.ToSingle((double)foo) },
            { new TypePair(typeof(short),    typeof(float)), foo => Convert.ToSingle((short)foo) },
            { new TypePair(typeof(int),      typeof(float)), foo => Convert.ToSingle((int)foo) },
            { new TypePair(typeof(long),     typeof(float)), foo => Convert.ToSingle((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(float)), foo => Convert.ToSingle((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(float)), foo => Convert.ToSingle((float)foo) },
            { new TypePair(typeof(string),   typeof(float)), foo => Convert.ToSingle((string)foo) },
            { new TypePair(typeof(ushort),   typeof(float)), foo => Convert.ToSingle((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(float)), foo => Convert.ToSingle((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(float)), foo => Convert.ToSingle((ulong)foo) },
            // string
            { new TypePair(typeof(bool),     typeof(string)), foo => Convert.ToString((byte)foo) },
            { new TypePair(typeof(byte),     typeof(string)), foo => Convert.ToString((bool)foo) },
            { new TypePair(typeof(char),     typeof(string)), foo => Convert.ToString((char)foo) },
            { new TypePair(typeof(DateTime), typeof(string)), foo => Convert.ToString((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(string)), foo => Convert.ToString((decimal)foo) },
            { new TypePair(typeof(double),   typeof(string)), foo => Convert.ToString((double)foo) },
            { new TypePair(typeof(short),    typeof(string)), foo => Convert.ToString((short)foo) },
            { new TypePair(typeof(int),      typeof(string)), foo => Convert.ToString((int)foo) },
            { new TypePair(typeof(long),     typeof(string)), foo => Convert.ToString((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(string)), foo => Convert.ToString((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(string)), foo => Convert.ToString((float)foo) },
            { new TypePair(typeof(string),   typeof(string)), foo => Convert.ToString((string)foo) },
            { new TypePair(typeof(ushort),   typeof(string)), foo => Convert.ToString((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(string)), foo => Convert.ToString((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(string)), foo => Convert.ToString((ulong)foo) },
            // ushort
            { new TypePair(typeof(bool),     typeof(ushort)), foo => Convert.ToUInt16((byte)foo) },
            { new TypePair(typeof(byte),     typeof(ushort)), foo => Convert.ToUInt16((bool)foo) },
            { new TypePair(typeof(char),     typeof(ushort)), foo => Convert.ToUInt16((char)foo) },
            { new TypePair(typeof(DateTime), typeof(ushort)), foo => Convert.ToUInt16((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(ushort)), foo => Convert.ToUInt16((decimal)foo) },
            { new TypePair(typeof(double),   typeof(ushort)), foo => Convert.ToUInt16((double)foo) },
            { new TypePair(typeof(short),    typeof(ushort)), foo => Convert.ToUInt16((short)foo) },
            { new TypePair(typeof(int),      typeof(ushort)), foo => Convert.ToUInt16((int)foo) },
            { new TypePair(typeof(long),     typeof(ushort)), foo => Convert.ToUInt16((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(ushort)), foo => Convert.ToUInt16((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(ushort)), foo => Convert.ToUInt16((float)foo) },
            { new TypePair(typeof(string),   typeof(ushort)), foo => Convert.ToUInt16((string)foo) },
            { new TypePair(typeof(ushort),   typeof(ushort)), foo => Convert.ToUInt16((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(ushort)), foo => Convert.ToUInt16((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(ushort)), foo => Convert.ToUInt16((ulong)foo) },
            // uint
            { new TypePair(typeof(bool),     typeof(uint)), foo => Convert.ToUInt32((byte)foo) },
            { new TypePair(typeof(byte),     typeof(uint)), foo => Convert.ToUInt32((bool)foo) },
            { new TypePair(typeof(char),     typeof(uint)), foo => Convert.ToUInt32((char)foo) },
            { new TypePair(typeof(DateTime), typeof(uint)), foo => Convert.ToUInt32((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(uint)), foo => Convert.ToUInt32((decimal)foo) },
            { new TypePair(typeof(double),   typeof(uint)), foo => Convert.ToUInt32((double)foo) },
            { new TypePair(typeof(short),    typeof(uint)), foo => Convert.ToUInt32((short)foo) },
            { new TypePair(typeof(int),      typeof(uint)), foo => Convert.ToUInt32((int)foo) },
            { new TypePair(typeof(long),     typeof(uint)), foo => Convert.ToUInt32((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(uint)), foo => Convert.ToUInt32((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(uint)), foo => Convert.ToUInt32((float)foo) },
            { new TypePair(typeof(string),   typeof(uint)), foo => Convert.ToUInt32((string)foo) },
            { new TypePair(typeof(ushort),   typeof(uint)), foo => Convert.ToUInt32((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(uint)), foo => Convert.ToUInt32((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(uint)), foo => Convert.ToUInt32((ulong)foo) },
            // ulong
            { new TypePair(typeof(bool),     typeof(ulong)), foo => Convert.ToUInt64((byte)foo) },
            { new TypePair(typeof(byte),     typeof(ulong)), foo => Convert.ToUInt64((bool)foo) },
            { new TypePair(typeof(char),     typeof(ulong)), foo => Convert.ToUInt64((char)foo) },
            { new TypePair(typeof(DateTime), typeof(ulong)), foo => Convert.ToUInt64((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(ulong)), foo => Convert.ToUInt64((decimal)foo) },
            { new TypePair(typeof(double),   typeof(ulong)), foo => Convert.ToUInt64((double)foo) },
            { new TypePair(typeof(short),    typeof(ulong)), foo => Convert.ToUInt64((short)foo) },
            { new TypePair(typeof(int),      typeof(ulong)), foo => Convert.ToUInt64((int)foo) },
            { new TypePair(typeof(long),     typeof(ulong)), foo => Convert.ToUInt64((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(ulong)), foo => Convert.ToUInt64((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(ulong)), foo => Convert.ToUInt64((float)foo) },
            { new TypePair(typeof(string),   typeof(ulong)), foo => Convert.ToUInt64((string)foo) },
            { new TypePair(typeof(ushort),   typeof(ulong)), foo => Convert.ToUInt64((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(ulong)), foo => Convert.ToUInt64((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(ulong)), foo => Convert.ToUInt64((ulong)foo) },
            // bool?
            { new TypePair(typeof(bool),     typeof(bool?)), foo => Convert.ToBoolean((byte)foo) },
            { new TypePair(typeof(byte),     typeof(bool?)), foo => Convert.ToBoolean((bool)foo) },
            { new TypePair(typeof(char),     typeof(bool?)), foo => Convert.ToBoolean((char)foo) },
            { new TypePair(typeof(DateTime), typeof(bool?)), foo => Convert.ToBoolean((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(bool?)), foo => Convert.ToBoolean((decimal)foo) },
            { new TypePair(typeof(double),   typeof(bool?)), foo => Convert.ToBoolean((double)foo) },
            { new TypePair(typeof(short),    typeof(bool?)), foo => Convert.ToBoolean((short)foo) },
            { new TypePair(typeof(int),      typeof(bool?)), foo => Convert.ToBoolean((int)foo) },
            { new TypePair(typeof(long),     typeof(bool?)), foo => Convert.ToBoolean((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(bool?)), foo => Convert.ToBoolean((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(bool?)), foo => Convert.ToBoolean((float)foo) },
            { new TypePair(typeof(string),   typeof(bool?)), foo => Convert.ToBoolean((string)foo) },
            { new TypePair(typeof(ushort),   typeof(bool?)), foo => Convert.ToBoolean((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(bool?)), foo => Convert.ToBoolean((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(bool?)), foo => Convert.ToBoolean((ulong)foo) },
            // byte?
            { new TypePair(typeof(bool),     typeof(byte?)), foo => Convert.ToByte((byte)foo) },
            { new TypePair(typeof(byte),     typeof(byte?)), foo => Convert.ToByte((bool)foo) },
            { new TypePair(typeof(char),     typeof(byte?)), foo => Convert.ToByte((char)foo) },
            { new TypePair(typeof(DateTime), typeof(byte?)), foo => Convert.ToByte((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(byte?)), foo => Convert.ToByte((decimal)foo) },
            { new TypePair(typeof(double),   typeof(byte?)), foo => Convert.ToByte((double)foo) },
            { new TypePair(typeof(short),    typeof(byte?)), foo => Convert.ToByte((short)foo) },
            { new TypePair(typeof(int),      typeof(byte?)), foo => Convert.ToByte((int)foo) },
            { new TypePair(typeof(long),     typeof(byte?)), foo => Convert.ToByte((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(byte?)), foo => Convert.ToByte((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(byte?)), foo => Convert.ToByte((float)foo) },
            { new TypePair(typeof(string),   typeof(byte?)), foo => Convert.ToByte((string)foo) },
            { new TypePair(typeof(ushort),   typeof(byte?)), foo => Convert.ToByte((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(byte?)), foo => Convert.ToByte((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(byte?)), foo => Convert.ToByte((ulong)foo) },
            // char?
            { new TypePair(typeof(bool),     typeof(char?)), foo => Convert.ToChar((byte)foo) },
            { new TypePair(typeof(byte),     typeof(char?)), foo => Convert.ToChar((bool)foo) },
            { new TypePair(typeof(char),     typeof(char?)), foo => Convert.ToChar((char)foo) },
            { new TypePair(typeof(DateTime), typeof(char?)), foo => Convert.ToChar((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(char?)), foo => Convert.ToChar((decimal)foo) },
            { new TypePair(typeof(double),   typeof(char?)), foo => Convert.ToChar((double)foo) },
            { new TypePair(typeof(short),    typeof(char?)), foo => Convert.ToChar((short)foo) },
            { new TypePair(typeof(int),      typeof(char?)), foo => Convert.ToChar((int)foo) },
            { new TypePair(typeof(long),     typeof(char?)), foo => Convert.ToChar((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(char?)), foo => Convert.ToChar((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(char?)), foo => Convert.ToChar((float)foo) },
            { new TypePair(typeof(string),   typeof(char?)), foo => Convert.ToChar((string)foo) },
            { new TypePair(typeof(ushort),   typeof(char?)), foo => Convert.ToChar((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(char?)), foo => Convert.ToChar((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(char?)), foo => Convert.ToChar((ulong)foo) },
            // DateTime?
            { new TypePair(typeof(bool),     typeof(DateTime?)), foo => Convert.ToDateTime((byte)foo) },
            { new TypePair(typeof(byte),     typeof(DateTime?)), foo => Convert.ToDateTime((bool)foo) },
            { new TypePair(typeof(char),     typeof(DateTime?)), foo => Convert.ToDateTime((char)foo) },
            { new TypePair(typeof(DateTime), typeof(DateTime?)), foo => Convert.ToDateTime((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(DateTime?)), foo => Convert.ToDateTime((decimal)foo) },
            { new TypePair(typeof(double),   typeof(DateTime?)), foo => Convert.ToDateTime((double)foo) },
            { new TypePair(typeof(short),    typeof(DateTime?)), foo => Convert.ToDateTime((short)foo) },
            { new TypePair(typeof(int),      typeof(DateTime?)), foo => Convert.ToDateTime((int)foo) },
            { new TypePair(typeof(long),     typeof(DateTime?)), foo => Convert.ToDateTime((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(DateTime?)), foo => Convert.ToDateTime((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(DateTime?)), foo => Convert.ToDateTime((float)foo) },
            { new TypePair(typeof(string),   typeof(DateTime?)), foo => Convert.ToDateTime((string)foo) },
            { new TypePair(typeof(ushort),   typeof(DateTime?)), foo => Convert.ToDateTime((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(DateTime?)), foo => Convert.ToDateTime((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(DateTime?)), foo => Convert.ToDateTime((ulong)foo) },
            // decimal?
            { new TypePair(typeof(bool),     typeof(decimal?)), foo => Convert.ToDecimal((byte)foo) },
            { new TypePair(typeof(byte),     typeof(decimal?)), foo => Convert.ToDecimal((bool)foo) },
            { new TypePair(typeof(char),     typeof(decimal?)), foo => Convert.ToDecimal((char)foo) },
            { new TypePair(typeof(DateTime), typeof(decimal?)), foo => Convert.ToDecimal((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(decimal?)), foo => Convert.ToDecimal((decimal)foo) },
            { new TypePair(typeof(double),   typeof(decimal?)), foo => Convert.ToDecimal((double)foo) },
            { new TypePair(typeof(short),    typeof(decimal?)), foo => Convert.ToDecimal((short)foo) },
            { new TypePair(typeof(int),      typeof(decimal?)), foo => Convert.ToDecimal((int)foo) },
            { new TypePair(typeof(long),     typeof(decimal?)), foo => Convert.ToDecimal((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(decimal?)), foo => Convert.ToDecimal((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(decimal?)), foo => Convert.ToDecimal((float)foo) },
            { new TypePair(typeof(string),   typeof(decimal?)), foo => Convert.ToDecimal((string)foo) },
            { new TypePair(typeof(ushort),   typeof(decimal?)), foo => Convert.ToDecimal((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(decimal?)), foo => Convert.ToDecimal((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(decimal?)), foo => Convert.ToDecimal((ulong)foo) },
            // Double?
            { new TypePair(typeof(bool),     typeof(double?)), foo => Convert.ToDouble((byte)foo) },
            { new TypePair(typeof(byte),     typeof(double?)), foo => Convert.ToDouble((bool)foo) },
            { new TypePair(typeof(char),     typeof(double?)), foo => Convert.ToDouble((char)foo) },
            { new TypePair(typeof(DateTime), typeof(double?)), foo => Convert.ToDouble((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(double?)), foo => Convert.ToDouble((decimal)foo) },
            { new TypePair(typeof(double),   typeof(double?)), foo => Convert.ToDouble((double)foo) },
            { new TypePair(typeof(short),    typeof(double?)), foo => Convert.ToDouble((short)foo) },
            { new TypePair(typeof(int),      typeof(double?)), foo => Convert.ToDouble((int)foo) },
            { new TypePair(typeof(long),     typeof(double?)), foo => Convert.ToDouble((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(double?)), foo => Convert.ToDouble((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(double?)), foo => Convert.ToDouble((float)foo) },
            { new TypePair(typeof(string),   typeof(double?)), foo => Convert.ToDouble((string)foo) },
            { new TypePair(typeof(ushort),   typeof(double?)), foo => Convert.ToDouble((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(double?)), foo => Convert.ToDouble((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(double?)), foo => Convert.ToDouble((ulong)foo) },
            // Int16?
            { new TypePair(typeof(bool),     typeof(short?)), foo => Convert.ToInt16((byte)foo) },
            { new TypePair(typeof(byte),     typeof(short?)), foo => Convert.ToInt16((bool)foo) },
            { new TypePair(typeof(char),     typeof(short?)), foo => Convert.ToInt16((char)foo) },
            { new TypePair(typeof(DateTime), typeof(short?)), foo => Convert.ToInt16((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(short?)), foo => Convert.ToInt16((decimal)foo) },
            { new TypePair(typeof(double),   typeof(short?)), foo => Convert.ToInt16((double)foo) },
            { new TypePair(typeof(short),    typeof(short?)), foo => Convert.ToInt16((short)foo) },
            { new TypePair(typeof(int),      typeof(short?)), foo => Convert.ToInt16((int)foo) },
            { new TypePair(typeof(long),     typeof(short?)), foo => Convert.ToInt16((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(short?)), foo => Convert.ToInt16((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(short?)), foo => Convert.ToInt16((float)foo) },
            { new TypePair(typeof(string),   typeof(short?)), foo => Convert.ToInt16((string)foo) },
            { new TypePair(typeof(ushort),   typeof(short?)), foo => Convert.ToInt16((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(short?)), foo => Convert.ToInt16((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(short?)), foo => Convert.ToInt16((ulong)foo) },
            // Int32?
            { new TypePair(typeof(bool),     typeof(int?)), foo => Convert.ToInt32((byte)foo) },
            { new TypePair(typeof(byte),     typeof(int?)), foo => Convert.ToInt32((bool)foo) },
            { new TypePair(typeof(char),     typeof(int?)), foo => Convert.ToInt32((char)foo) },
            { new TypePair(typeof(DateTime), typeof(int?)), foo => Convert.ToInt32((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(int?)), foo => Convert.ToInt32((decimal)foo) },
            { new TypePair(typeof(double),   typeof(int?)), foo => Convert.ToInt32((double)foo) },
            { new TypePair(typeof(short),    typeof(int?)), foo => Convert.ToInt32((short)foo) },
            { new TypePair(typeof(int),      typeof(int?)), foo => Convert.ToInt32((int)foo) },
            { new TypePair(typeof(long),     typeof(int?)), foo => Convert.ToInt32((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(int?)), foo => Convert.ToInt32((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(int?)), foo => Convert.ToInt32((float)foo) },
            { new TypePair(typeof(string),   typeof(int?)), foo => Convert.ToInt32((string)foo) },
            { new TypePair(typeof(ushort),   typeof(int?)), foo => Convert.ToInt32((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(int?)), foo => Convert.ToInt32((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(int?)), foo => Convert.ToInt32((ulong)foo) },
            // Int64?
            { new TypePair(typeof(bool),     typeof(long?)), foo => Convert.ToInt64((byte)foo) },
            { new TypePair(typeof(byte),     typeof(long?)), foo => Convert.ToInt64((bool)foo) },
            { new TypePair(typeof(char),     typeof(long?)), foo => Convert.ToInt64((char)foo) },
            { new TypePair(typeof(DateTime), typeof(long?)), foo => Convert.ToInt64((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(long?)), foo => Convert.ToInt64((decimal)foo) },
            { new TypePair(typeof(double),   typeof(long?)), foo => Convert.ToInt64((double)foo) },
            { new TypePair(typeof(short),    typeof(long?)), foo => Convert.ToInt64((short)foo) },
            { new TypePair(typeof(int),      typeof(long?)), foo => Convert.ToInt64((int)foo) },
            { new TypePair(typeof(long),     typeof(long?)), foo => Convert.ToInt64((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(long?)), foo => Convert.ToInt64((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(long?)), foo => Convert.ToInt64((float)foo) },
            { new TypePair(typeof(string),   typeof(long?)), foo => Convert.ToInt64((string)foo) },
            { new TypePair(typeof(ushort),   typeof(long?)), foo => Convert.ToInt64((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(long?)), foo => Convert.ToInt64((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(long?)), foo => Convert.ToInt64((ulong)foo) },
            // sbyte?
            { new TypePair(typeof(bool),     typeof(sbyte?)), foo => Convert.ToSByte((byte)foo) },
            { new TypePair(typeof(byte),     typeof(sbyte?)), foo => Convert.ToSByte((bool)foo) },
            { new TypePair(typeof(char),     typeof(sbyte?)), foo => Convert.ToSByte((char)foo) },
            { new TypePair(typeof(DateTime), typeof(sbyte?)), foo => Convert.ToSByte((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(sbyte?)), foo => Convert.ToSByte((decimal)foo) },
            { new TypePair(typeof(double),   typeof(sbyte?)), foo => Convert.ToSByte((double)foo) },
            { new TypePair(typeof(short),    typeof(sbyte?)), foo => Convert.ToSByte((short)foo) },
            { new TypePair(typeof(int),      typeof(sbyte?)), foo => Convert.ToSByte((int)foo) },
            { new TypePair(typeof(long),     typeof(sbyte?)), foo => Convert.ToSByte((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(sbyte?)), foo => Convert.ToSByte((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(sbyte?)), foo => Convert.ToSByte((float)foo) },
            { new TypePair(typeof(string),   typeof(sbyte?)), foo => Convert.ToSByte((string)foo) },
            { new TypePair(typeof(ushort),   typeof(sbyte?)), foo => Convert.ToSByte((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(sbyte?)), foo => Convert.ToSByte((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(sbyte?)), foo => Convert.ToSByte((ulong)foo) },
            // float?
            { new TypePair(typeof(bool),     typeof(float?)), foo => Convert.ToSingle((byte)foo) },
            { new TypePair(typeof(byte),     typeof(float?)), foo => Convert.ToSingle((bool)foo) },
            { new TypePair(typeof(char),     typeof(float?)), foo => Convert.ToSingle((char)foo) },
            { new TypePair(typeof(DateTime), typeof(float?)), foo => Convert.ToSingle((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(float?)), foo => Convert.ToSingle((decimal)foo) },
            { new TypePair(typeof(double),   typeof(float?)), foo => Convert.ToSingle((double)foo) },
            { new TypePair(typeof(short),    typeof(float?)), foo => Convert.ToSingle((short)foo) },
            { new TypePair(typeof(int),      typeof(float?)), foo => Convert.ToSingle((int)foo) },
            { new TypePair(typeof(long),     typeof(float?)), foo => Convert.ToSingle((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(float?)), foo => Convert.ToSingle((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(float?)), foo => Convert.ToSingle((float)foo) },
            { new TypePair(typeof(string),   typeof(float?)), foo => Convert.ToSingle((string)foo) },
            { new TypePair(typeof(ushort),   typeof(float?)), foo => Convert.ToSingle((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(float?)), foo => Convert.ToSingle((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(float?)), foo => Convert.ToSingle((ulong)foo) },
            // ushort?
            { new TypePair(typeof(bool),     typeof(ushort?)), foo => Convert.ToUInt16((byte)foo) },
            { new TypePair(typeof(byte),     typeof(ushort?)), foo => Convert.ToUInt16((bool)foo) },
            { new TypePair(typeof(char),     typeof(ushort?)), foo => Convert.ToUInt16((char)foo) },
            { new TypePair(typeof(DateTime), typeof(ushort?)), foo => Convert.ToUInt16((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(ushort?)), foo => Convert.ToUInt16((decimal)foo) },
            { new TypePair(typeof(double),   typeof(ushort?)), foo => Convert.ToUInt16((double)foo) },
            { new TypePair(typeof(short),    typeof(ushort?)), foo => Convert.ToUInt16((short)foo) },
            { new TypePair(typeof(int),      typeof(ushort?)), foo => Convert.ToUInt16((int)foo) },
            { new TypePair(typeof(long),     typeof(ushort?)), foo => Convert.ToUInt16((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(ushort?)), foo => Convert.ToUInt16((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(ushort?)), foo => Convert.ToUInt16((float)foo) },
            { new TypePair(typeof(string),   typeof(ushort?)), foo => Convert.ToUInt16((string)foo) },
            { new TypePair(typeof(ushort),   typeof(ushort?)), foo => Convert.ToUInt16((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(ushort?)), foo => Convert.ToUInt16((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(ushort?)), foo => Convert.ToUInt16((ulong)foo) },
            // uint?
            { new TypePair(typeof(bool),     typeof(uint?)), foo => Convert.ToUInt32((byte)foo) },
            { new TypePair(typeof(byte),     typeof(uint?)), foo => Convert.ToUInt32((bool)foo) },
            { new TypePair(typeof(char),     typeof(uint?)), foo => Convert.ToUInt32((char)foo) },
            { new TypePair(typeof(DateTime), typeof(uint?)), foo => Convert.ToUInt32((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(uint?)), foo => Convert.ToUInt32((decimal)foo) },
            { new TypePair(typeof(double),   typeof(uint?)), foo => Convert.ToUInt32((double)foo) },
            { new TypePair(typeof(short),    typeof(uint?)), foo => Convert.ToUInt32((short)foo) },
            { new TypePair(typeof(int),      typeof(uint?)), foo => Convert.ToUInt32((int)foo) },
            { new TypePair(typeof(long),     typeof(uint?)), foo => Convert.ToUInt32((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(uint?)), foo => Convert.ToUInt32((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(uint?)), foo => Convert.ToUInt32((float)foo) },
            { new TypePair(typeof(string),   typeof(uint?)), foo => Convert.ToUInt32((string)foo) },
            { new TypePair(typeof(ushort),   typeof(uint?)), foo => Convert.ToUInt32((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(uint?)), foo => Convert.ToUInt32((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(uint?)), foo => Convert.ToUInt32((ulong)foo) },
            // ulong?
            { new TypePair(typeof(bool),     typeof(ulong?)), foo => Convert.ToUInt64((byte)foo) },
            { new TypePair(typeof(byte),     typeof(ulong?)), foo => Convert.ToUInt64((bool)foo) },
            { new TypePair(typeof(char),     typeof(ulong?)), foo => Convert.ToUInt64((char)foo) },
            { new TypePair(typeof(DateTime), typeof(ulong?)), foo => Convert.ToUInt64((DateTime)foo) },
            { new TypePair(typeof(decimal),  typeof(ulong?)), foo => Convert.ToUInt64((decimal)foo) },
            { new TypePair(typeof(double),   typeof(ulong?)), foo => Convert.ToUInt64((double)foo) },
            { new TypePair(typeof(short),    typeof(ulong?)), foo => Convert.ToUInt64((short)foo) },
            { new TypePair(typeof(int),      typeof(ulong?)), foo => Convert.ToUInt64((int)foo) },
            { new TypePair(typeof(long),     typeof(ulong?)), foo => Convert.ToUInt64((long)foo) },
            { new TypePair(typeof(sbyte),    typeof(ulong?)), foo => Convert.ToUInt64((sbyte)foo) },
            { new TypePair(typeof(float),    typeof(ulong?)), foo => Convert.ToUInt64((float)foo) },
            { new TypePair(typeof(string),   typeof(ulong?)), foo => Convert.ToUInt64((string)foo) },
            { new TypePair(typeof(ushort),   typeof(ulong?)), foo => Convert.ToUInt64((ushort)foo) },
            { new TypePair(typeof(uint),     typeof(ulong?)), foo => Convert.ToUInt64((uint)foo) },
            { new TypePair(typeof(ulong),    typeof(ulong?)), foo => Convert.ToUInt64((ulong)foo) },
        });

        public object Map(ResolutionContext context) =>
            context.SourceValue == null
            ? context.Mapper.CreateObject(context)
            : _converters[context.Types](context.SourceValue);

        public bool IsMatch(TypePair types) => _converters.ContainsKey(types);
    }
}
